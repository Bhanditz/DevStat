apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

// Load profile information from the standard maven settings file
def getMavenSettingsProfiles = {
    String userHome = System.getProperty("user.home");
    File mavenSettings = new File(userHome, ".m2/settings.xml")
    def output
    if (mavenSettings.canRead()) {
        def xmlSlurper = new XmlSlurper()
        output = xmlSlurper.parse(mavenSettings)
    } else {
        println "WARNING: Maven settings file cannot be found - builds cannot be signed"
        output = []
    }
    return output."profiles"."profile"
}

def getCredentials = {
    def profiles = getMavenSettingsProfiles()
    def creds = [location: "/not/found", password: "", keypass: "", alias: ""]
    for (profile in profiles) {
        if (profile."id".text() == "devstat") {
            def properties = profile."properties"
            creds = [location: properties."keystore.location".text(),
                     password: properties."keystore.password".text(),
                     keypass: properties."keystore.keypass".text(),
                     alias: properties."keystore.alias".text()]
        }
    }
    return creds
}

dependencies {
    compile 'com.android.support:support-v4:24.0.0-alpha1'
    compile 'com.android.support:appcompat-v7:24.0.0-alpha1'
    compile 'com.android.support:recyclerview-v7:24.0.0-alpha1'
    compile 'com.android.support:design:24.0.0-alpha1'
    compile 'com.jakewharton:butterknife:7.0.1'

    provided 'javax.annotation:jsr250-api:1.0'
    compile 'com.google.dagger:dagger:2.0.2'
    apt 'com.google.dagger:dagger-compiler:2.0.1'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.hamcrest:hamcrest-library:1.1'
    testCompile 'com.google.truth:truth:0.27'

    androidTestCompile 'junit:junit:4.12'

    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2.1'
    androidTestCompile 'com.android.support:support-annotations:24.0.0-alpha1'
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.4.1'
    // Set this dependency if you want to use Hamcrest matching
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
}

android {
    compileSdkVersion 'android-N'
    buildToolsVersion '24.0.0 rc1'

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 'android-N'
        applicationId 'uk.co.ianfield.devstat'
        versionCode 12
        versionName '2.1.2'
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            def credentials = getCredentials()
            storeFile file(credentials["location"])
            storePassword credentials["password"]
            keyPassword credentials["keypass"]
            keyAlias credentials["alias"]
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFile getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.release
        }
    }
    productFlavors {
        defaultFlavor {
            proguardFile 'proguard-rules.txt'
        }
        productFlavors
        dev {
            minSdkVersion 'android-N'
        }
        prod {
            // The actual minSdkVersion for the application.
            minSdkVersion 8
        }
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            outputs.upToDateWhen { false }
            showStandardStreams = true
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}
